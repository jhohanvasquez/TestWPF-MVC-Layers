//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test.BDO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BdTestEntities : DbContext
    {
        public BdTestEntities()
            : base("name=BdTestEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TbUserGender> TbUserGenders { get; set; }
        public virtual DbSet<TbUser> TbUsers { get; set; }
    
        public virtual int DeleteUser(Nullable<int> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", idUserParameter);
        }
    
        public virtual ObjectResult<ListorDetailUserGenders_Result> ListorDetailUserGenders(Nullable<int> idGenderUser)
        {
            var idGenderUserParameter = idGenderUser.HasValue ?
                new ObjectParameter("IdGenderUser", idGenderUser) :
                new ObjectParameter("IdGenderUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListorDetailUserGenders_Result>("ListorDetailUserGenders", idGenderUserParameter);
        }
    
        public virtual ObjectResult<TbUser> RegisterOrSaveUserUsers(Nullable<int> idUser, string nameUser, Nullable<System.DateTime> birthDate, Nullable<int> idGenderUser, string sex)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(int));
    
            var nameUserParameter = nameUser != null ?
                new ObjectParameter("NameUser", nameUser) :
                new ObjectParameter("NameUser", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var idGenderUserParameter = idGenderUser.HasValue ?
                new ObjectParameter("IdGenderUser", idGenderUser) :
                new ObjectParameter("IdGenderUser", typeof(int));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TbUser>("RegisterOrSaveUserUsers", idUserParameter, nameUserParameter, birthDateParameter, idGenderUserParameter, sexParameter);
        }
    
        public virtual ObjectResult<TbUser> RegisterOrSaveUserUsers(Nullable<int> idUser, string nameUser, Nullable<System.DateTime> birthDate, Nullable<int> idGenderUser, string sex, MergeOption mergeOption)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(int));
    
            var nameUserParameter = nameUser != null ?
                new ObjectParameter("NameUser", nameUser) :
                new ObjectParameter("NameUser", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var idGenderUserParameter = idGenderUser.HasValue ?
                new ObjectParameter("IdGenderUser", idGenderUser) :
                new ObjectParameter("IdGenderUser", typeof(int));
    
            var sexParameter = sex != null ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TbUser>("RegisterOrSaveUserUsers", mergeOption, idUserParameter, nameUserParameter, birthDateParameter, idGenderUserParameter, sexParameter);
        }
    
        public virtual ObjectResult<ListorDetailUser_Result> ListorDetailUser(Nullable<int> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListorDetailUser_Result>("ListorDetailUser", idUserParameter);
        }
    }
}
